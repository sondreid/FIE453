## Libaries
library(tidyverse)
library(magrittr)
library(caret)
library(kableExtra)
load("merged.Rdata")
df <- merged
df %>% apply(MARGIN = 2, FUN = function(x) all(is.na(x)))
# Subset of 100 companies
permno <- merged %>%
select(PERMNO) %>%
unique() %>%
head(100)
# Filtering the data frame containing only the 10 first companies
df_subset <- merged %>%
filter(PERMNO %in% permno$PERMNO)
remove_all_zero_columns <- function(df) {
columns <- df %>% apply(MARGIN = 2, FUN = function(x) all(is.na(x)))
return (columns)
}
remove_all_zero_columns(df_subset)
test <- remove_all_zero_columns(df_subset)
gc()
test %>% typeof()
test$rownames
rownames(test
)
test %>% as.data.frame()
test %>% as_tibble(
)
test
remove_all_zero_columns <- function(df) {
columns <- df %>% apply(MARGIN = 2, FUN = function(x) all(is.na(x))) %>%
as.data.frame()
filter(. == FALSE) %>%
rownames()
out_df <- df %>% select(columns)
return (out_df)
}
test <- remove_all_zero_columns(df_subset)
View(df_subset)
df_subset$RET ==
fe
df_subset$PRC[2] == (df_subset$PRC[1]*df_subset$RET[2])
(df_subset$PRC[1]*df_subset$RET[2])
df_subset$PRC[1]
df_subset$PRC[2]
df_subset$PRC[1] * (1+df_subset$RET[2])
df_subset$PRC[1] * (1+df_subset$RET[1])
df_subset$PRC[1] * (1+df_subset$RET[1])
remove_all_zero_columns <- function(df) {
columns <- df %>% apply(MARGIN = 2, FUN = function(x) all(is.na(x))) %>%
as.data.frame()
filter(. == FALSE) %>%
rownames()
out_df <- df %>% select(columns)
return (out_df)
}
test <- remove_all_zero_columns(df_subset)
remove_all_zero_columns <- function(df) {
columns <- df %>% apply(MARGIN = 2, FUN = function(x) all(is.na(x))) %>%
as.data.frame() %>%
filter(. == FALSE) %>%
rownames()
out_df <- df %>% select(columns)
return (out_df)
}
test <- remove_all_zero_columns(df_subset)
test
View(test)
remove_all_zero_columns <- function(df) {
columns <- df %>% apply(MARGIN = 2, FUN = function(x) all(is.na(x))) %>%
as.data.frame() %>%
filter(. == FALSE) %>%
rownames()
out_df <- df %>% select(all_of(columns))
return (out_df)
}
test <- remove_all_zero_columns(df_subset)
test
View(test)
